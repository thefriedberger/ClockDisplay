#BlueJ class context
comment0.params=rollOverLimit
comment0.target=NumberDisplay(int)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ NumberDisplay.\r\n\ Set\ the\ limit\ at\ which\ the\ display\ rolls\ over.\r\n
comment1.params=
comment1.target=int\ getValue()
comment1.text=\r\n\ Return\ the\ current\ value.\r\n
comment2.params=
comment2.target=java.lang.String\ getHourDisplayValue()
comment2.text=\r\nDetermines\ whether\ the\ value\ will\ be\ equivalent\ to\ a\ zero,\ and\ if\ yes,\ then\ it\ adds\ 1\ to\ the\ value.\r\n
comment3.params=
comment3.target=java.lang.String\ getMinuteDisplayValue()
comment3.text=\r\n\ Return\ the\ display\ value\ (that\ is,\ the\ current\ value\ as\ a\ two-digit\r\n\ String.\ If\ the\ value\ is\ less\ than\ ten,\ it\ will\ be\ padded\ with\ a\ leading\r\n\ zero).\r\n
comment4.params=replacementValue
comment4.target=void\ setValue(int)
comment4.text=\r\n\ Set\ the\ value\ of\ the\ display\ to\ the\ new\ specified\ value.\ If\ the\ new\r\n\ value\ is\ less\ than\ zero\ or\ over\ the\ limit,\ do\ nothing.\ I'm\ also\ realizing\ this\ is\ probably\ redundant\r\n
comment5.params=
comment5.target=void\ minuteIncrement()
comment5.text=\r\n\ Increment\ the\ display\ value\ by\ one,\ rolling\ over\ to\ zero\ if\ the\r\n\ limit\ is\ reached.\r\n
comment6.params=
comment6.target=void\ hourIncrement()
comment6.text=\r\nThis\ method\ performs\ a\ very\ similar\ action\ to\ the\ original\ Increment()\ but\ instead,\ it\ at\ the\ ends\ adds\r\na\ value\ of\ 1\ so\ that\ when\ it\ rolls\ over\ from\ 12\ to\ 1\ it\ won't\ display\ 0.\r\n
numComments=7
